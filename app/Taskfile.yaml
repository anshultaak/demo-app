version: '3'

vars:
  container_name: webapp
  hadolint_config: ./hadolint.yaml
  hadolint_image: hadolint/hadolint
  local_port: 80
  container_port: 3000

tasks:
  clean:
    desc: "Stop and remove the {{.container_name}} container"
    cmds:
      - docker stop {{.container_name}} || true
      - docker rm {{.container_name}} || true
    ignore_error: true

  build:
    desc: "Build the {{.container_name}} Docker image"
    cmds:
      - docker build --build-arg WEBTEXT="Hello World" -t {{.container_name}} .

  lint:
    desc: "Lint the Dockerfile using Hadolint"
    cmds:
      - docker run --rm -i -v {{.hadolint_config}}:/.config/hadolint.yaml {{.hadolint_image}} < Dockerfile

  deploy:
    desc: "Run the {{.container_name}} container locally"
    cmds:
      - docker run -d --name {{ .container_name}} -p {{.local_port}}:{{.container_port}} -e WEBTEXT="Development deploy without doppler" {{.container_name}}

  deploywithdoppler:
    desc: "Run the {{.container_name}} container with Doppler"
    cmds:
      - docker run -d --name {{ .container_name}} -p {{.local_port}}:{{.container_port}} -e WEBTEXT="{{ .WEBTEXT }}" {{.container_name}}
    vars:
      doopler_token:
        sh: aws ssm get-parameter --name "doppler_token" --query "Parameter.Value" --output text
      WEBTEXT:
        sh: doppler secrets get WEBTEXT --plain --token {{ .doopler_token }}

  test:
    desc: "Test the deployment"
    dir: ./script
    cmds:
      - echo {{.Result}}
    vars:
      Result:
        sh: ./test.sh

  force_clean:
    desc: "Stop and remove the all container"
    cmds:
      - docker stop $(docker ps -a) || true
      - docker rm  -f $(docker ps -a) || true

  images_clean:
    desc: "remove the all images"
    cmds:
      - docker rmi  -f $(docker images) || true



  deploy_app:
    desc: "Run the application pipeline"
    cmds:
      - task: clean
      - task: build
      - task: lint
      - task: deploywithdoppler
      - task: test

